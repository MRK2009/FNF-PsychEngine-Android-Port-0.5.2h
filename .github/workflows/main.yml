# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndroid:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r22b

      - name: Setup Haxe
        uses: krdlab/setup-haxe@v1.1.5
        with:
          haxe-version: 4.2.5

      - name: Install Haxelibs
        run: |
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet install flixel 4.11.0
          haxelib --quiet --always run lime setup flixel
          haxelib --quiet install flixel-ui 2.4.0
          haxelib --quiet install flixel-addons 2.11.0
          haxelib git linc_luajit https://github.com/AndreiRudenko/linc_luajit.git --quiet
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git --quiet
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_11_X64
          haxelib run lime config ANDROID_SETUP true 
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Build APK
        run: lime build android -final

      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/debug
